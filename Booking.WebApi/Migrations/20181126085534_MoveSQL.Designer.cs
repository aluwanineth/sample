// <auto-generated />
using System;
using Booking.WebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.WebApi.Migrations
{
    [DbContext(typeof(BookingDBContext))]
    [Migration("20181126085534_MoveSQL")]
    partial class MoveSQL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.WebApi.Models.Entities.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Booking.WebApi.Models.Entities.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookerName");

                    b.Property<int>("FlightScheduleId");

                    b.Property<int>("NoOfPassenger");

                    b.Property<string>("Remarks");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("FlightScheduleId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("Booking.WebApi.Models.Entities.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("FlightId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Booking.WebApi.Models.Entities.FlightSchedule", b =>
                {
                    b.Property<int>("FlightScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirportId");

                    b.Property<DateTime>("DepatureDateTime");

                    b.Property<int>("FlightId");

                    b.Property<string>("FromDestination");

                    b.Property<string>("ToDestination");

                    b.HasKey("FlightScheduleId");

                    b.HasIndex("AirportId");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightSchedules");
                });

            modelBuilder.Entity("Booking.WebApi.Models.Entities.BookingDetail", b =>
                {
                    b.HasOne("Booking.WebApi.Models.Entities.FlightSchedule", "FlightSchedule")
                        .WithMany()
                        .HasForeignKey("FlightScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Booking.WebApi.Models.Entities.FlightSchedule", b =>
                {
                    b.HasOne("Booking.WebApi.Models.Entities.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Booking.WebApi.Models.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
